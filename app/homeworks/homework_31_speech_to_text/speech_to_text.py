import speech_recognition as sr
from translate import Translator


# Функція для перетворення аудіо на текст
def audio_to_text(audio_file_path):
    """
    Функція audio_to_text(audio_file_path) приймає шлях до аудіофайлу та перетворює аудіо в текст,

    використовуючи сервіс Google для розпізнавання мовлення.

    Параметри:
        audio_file_path (str): Шлях до аудіофайлу.

    Повертає:
        str: Розпізнаний текст з аудіофайлу або повідомлення про помилку.

    Функція працює таким чином:
    1. Створює об'єкт розпізнавача мовлення.
    2. Відкриває аудіофайл за заданим шляхом.
    3. Записує аудіодані з файлу.
    4. Виконує розпізнавання мовлення за допомогою сервісу Google.
    5. Якщо розпізнавання вдалося, повертає текст.
    6. Якщо аудіо не вдалося розпізнати, повертає повідомлення "Не вдалося розпізнати аудіо".
    7. Якщо сталася помилка сервісу розпізнавання мовлення, повертає повідомлення про помилку з детальною інформацією.
    """

    recognizer = sr.Recognizer()

    with sr.AudioFile(audio_file_path) as source:
        audio_data = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio_data, language="en-EN")
            return text
        except sr.UnknownValueError:
            return "Не вдалося розпізнати аудіо"
        except sr.RequestError as e:
            return f"Помилка сервісу розпізнавання мовлення; {e}"


# Функція для перекладу тексту
def translate_text(text, dest_language="uk"):
    """
    Функція translate_text(text, dest_language="uk") приймає текст і перекладає його на вказану мову.

    Параметри:
        text (str): Текст, який необхідно перекласти.
        dest_language (str, опціонально): Цільова мова перекладу. За замовчуванням "uk" (українська).

    Повертає:
        str: Перекладений текст або повідомлення про помилку.

    Функція працює таким чином:
    1. Створює об'єкт перекладача з вказаною цільовою мовою.
    2. Виконує переклад заданого тексту.
    3. Якщо переклад успішний, повертає перекладений текст.
    4. Якщо сталася помилка під час перекладу, повертає повідомлення "Помилка перекладу" з детальною інформацією про помилку.
    """

    translator = Translator(to_lang=dest_language)
    try:
        translation = translator.translate(text)
        return translation
    except Exception as e:
        return f"Помилка перекладу: {e}"


# Розпізнавання англійської мови з 10 *.wav файлів та переклад їх на українську
base_path = "../../data/wav/arctic_a"
for i in range(1, 11):
    """
    Цей код обробляє аудіофайли, розташовані у вказаній директорії, перетворює їх у текст 

    та перекладає цей текст на українську мову.

    1. Встановлюється базовий шлях до директорії з аудіофайлами.
    2. Виконується цикл для обробки файлів з індексами від 1 до 10.
    3. У кожній ітерації:
        a. Формується шлях до аудіофайлу з відповідним номером, використовуючи форматування з чотирма цифрами.
        b. Виводиться повідомлення про обробку поточного файлу.
        c. Викликається функція audio_to_text() для розпізнавання тексту з аудіофайлу.
        d. Виводиться розпізнаний текст англійською мовою.
        e. Викликається функція translate_text() для перекладу розпізнаного тексту на українську мову.
        f. Виводиться перекладений текст українською мовою.
    """

    audio_file_path = f"{base_path}{i:04d}.wav"
    print(f"\nРезультат для файлу {audio_file_path}:")

    text = audio_to_text(audio_file_path)
    print("\nРозпізнаний оригінальний текст (en):", text)

    translated_text = translate_text(text)
    print("Переклад на українську         (uk):", translated_text)
